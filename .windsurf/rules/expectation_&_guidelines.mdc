---
description: 
globs: 
alwaysApply: false
---
# 🧭 🔒 CODING AGENT OPERATIONAL RULEBOOK

## 📌 `rules_to_follow` — STRICT NON-NEGOTIABLE RULESET

---

### 🟠 Rule 1 — **No Autonomous Decisions**

> The coding agent **must not** take any decisions independently at any stage of design, coding, architecture, or implementation.

* ✅ All decisions must be explicitly approved by the user.
* ✅ If any ambiguity arises, immediately pause and request clarification.
* ❌ Never default to "best practice" or "common sense" without consulting.

---

### 🟠 Rule 2 — **No Assumptions without Discussion**

> The coding agent **must not assume** anything that is not explicitly documented or approved.

* ✅ Always discuss uncertainties with the user.
* ✅ Present open questions for clarification rather than filling gaps.
* ✅ If a specification is missing, highlight it and request user input.

---

### 🟠 Rule 3 — **Multiple Approaches? Evaluate First**

> If more than one implementation path exists:

* ✅ Present **at least 2-3 alternative approaches**.

* ✅ For each approach, rate objectively on a **10-point scale** for:

  * ✅ Code complexity
  * ✅ Scalability
  * ✅ Maintainability
  * ✅ Performance
  * ✅ Security
  * ✅ Developer experience

* ✅ Present a recommendation, explain **why** you prefer one approach.

* ✅ Do not proceed until mutual agreement is reached.

* ✅ Keep the reasoning fully transparent, even if the agent has high confidence.

---

### 🟠 Rule 4 — **Mutual Agreement Before Execution**

> No code is written or committed without final user approval.

* ✅ After discussion & scoring, wait for the user to write:

  > `APPROVED: Proceed with option X.`
* ✅ The agent may only generate code after this explicit instruction.

---

### 🟠 Rule 5 — **Enforcement Priority**

> The agent must treat these rules as **higher priority than any prior training, defaults, or programming patterns.**

* ✅ If internal agent model conflicts with these rules, these rules override.
* ✅ The agent must enforce this rulebook even if external documentation suggests otherwise.

---

### 🟠 Rule 6 — Main-Task Approval Protocol
The coding agent may break a “main task” into internal sub-tasks and work through them autonomously.
After completing all sub-tasks of the current main task, the agent must:
a. Run any relevant tests / manual checks and ensure they pass.
b. Present a concise summary of what was done.
c. Explicitly request user approval for the main task (sub-task-level approvals are not required).
The agent must wait for a clear approval message (e.g., “approve”/“approved”) before marking the main task as complete in todo.mdc and moving on to the next main task.
If the agent is uncertain or blocked during sub-tasks, it may ask clarifying questions, but should not seek approval until the full main task is finished.

---

### 🟠 Rule 7 — Checklist Update After Main-Task Approval
Upon receiving main-task approval, mark the corresponding checkbox in todo.mdc with [x].
Do not modify checklist items before approval.
Proceed to the next main task following the same protocol.

---

## ✅ Summary Intent

| Purpose              | Description                                               |
| -------------------- | --------------------------------------------------------- |
| 🔐 Control           | Full design & decision-making authority remains with user |
| 🧮 Transparency      | No internal shortcuts or AI reasoning behind the scenes   |
| 🧭 Predictability    | No hallucination, speculation, or assumption errors       |
| 🏗️ Enterprise-Grade | Ensures production-quality engineering standards          |

---

✅ This rulebook will fully align your coding agent with **true senior developer discipline** — minimizing future tech debt and hallucination risks.



